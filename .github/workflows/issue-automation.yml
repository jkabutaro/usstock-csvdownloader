name: Issue Automation

on:
  issues:
    types: [opened, edited, labeled, unlabeled]
  issue_comment:
    types: [created]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Auto-label based on title and content
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const title = issue.title.toLowerCase();
            const body = issue.body?.toLowerCase() || '';
            const labels = [];

            // Bug detection
            if (title.includes('bug') || title.includes('error') || title.includes('issue') || 
                body.includes('error') || body.includes('exception') || body.includes('crash')) {
              labels.push('bug');
            }

            // Feature request detection
            if (title.includes('feature') || title.includes('enhancement') || title.includes('add') ||
                body.includes('feature request') || body.includes('enhancement')) {
              labels.push('enhancement');
            }

            // Question detection
            if (title.includes('how') || title.includes('question') || title.includes('help') ||
                body.includes('how do i') || body.includes('question')) {
              labels.push('question');
            }

            // Documentation detection
            if (title.includes('documentation') || title.includes('docs') || title.includes('readme') ||
                body.includes('documentation') || body.includes('docs')) {
              labels.push('documentation');
            }

            // Priority detection
            if (title.includes('urgent') || title.includes('critical') || body.includes('urgent')) {
              labels.push('priority: high');
            }

            // Stock data related
            if (title.includes('stock') || title.includes('data') || title.includes('download') ||
                body.includes('yahoo finance') || body.includes('csv')) {
              labels.push('stock-data');
            }

            // Performance related
            if (title.includes('slow') || title.includes('performance') || title.includes('speed') ||
                body.includes('performance') || body.includes('optimization')) {
              labels.push('performance');
            }

            // Configuration related
            if (title.includes('config') || title.includes('setting') || body.includes('configuration')) {
              labels.push('configuration');
            }

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labels
              });
            }

  auto-assign:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Auto-assign issues
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const title = issue.title.toLowerCase();
            
            // Auto-assign to repository owner for now
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              assignees: ['jkabutaro']
            });

  welcome-comment:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Welcome new contributors
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const author = issue.user.login;
            
            // Check if this is the user's first issue
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              creator: author,
              state: 'all'
            });
            
            if (issues.data.length === 1) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `üëã Welcome @${author}! Thank you for opening your first issue in the US Stock CSV Downloader repository.

I'll review your issue and get back to you as soon as possible. In the meantime:

üîç **For bug reports**, please ensure you've included:
- Steps to reproduce the issue
- Expected vs actual behavior
- Your operating system and .NET version
- Any error messages or logs

üí° **For feature requests**, please describe:
- The use case or problem you're trying to solve
- Your proposed solution
- Any alternatives you've considered

üìö **For questions**, you might also find helpful information in:
- [README.md](https://github.com/jkabutaro/usstock-csvdownloader/blob/main/README.md)
- [DEVELOPMENT.md](https://github.com/jkabutaro/usstock-csvdownloader/blob/main/DEVELOPMENT.md)

Thanks for contributing to the project! üöÄ`
              });
            }

  stale-check:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Add to stale tracking
        uses: actions/github-script@v7
        with:
          script: |
            // This will be used by the stale workflow to track issue age
            console.log(`Issue #${context.payload.issue.number} opened and will be tracked for staleness`);