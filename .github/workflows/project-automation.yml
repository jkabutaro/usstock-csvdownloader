name: Project Automation

on:
  issues:
    types: [opened, closed, reopened]
  pull_request:
    types: [opened, closed, reopened, ready_for_review]

jobs:
  add-to-project:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Add Issue or PR to Project
        uses: actions/github-script@v7
        with:
          script: |
            const itemType = context.eventName === 'issues' ? 'issue' : 'pull_request';
            const itemNumber = context.payload[itemType].number;
            const itemTitle = context.payload[itemType].title;
            
            console.log(`Adding ${itemType} #${itemNumber} "${itemTitle}" to project tracking`);
            
            // This would add items to a GitHub Project board if configured
            // For now, we'll just log and label appropriately
            
            const labels = ['status: new'];
            
            if (itemType === 'issue') {
              // Additional issue-specific automation
              if (context.payload.issue.title.toLowerCase().includes('bug')) {
                labels.push('priority: medium');
              }
            } else {
              // PR-specific automation
              labels.push('needs-review');
            }
            
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: itemNumber,
              labels: labels
            });

  update-project-status:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    steps:
      - name: Update Project Status
        uses: actions/github-script@v7
        with:
          script: |
            const itemType = context.eventName === 'issues' ? 'issue' : 'pull_request';
            const itemNumber = context.payload[itemType].number;
            
            // Remove status labels and add completed label
            const labelsToRemove = ['status: new', 'needs-review', 'in-progress'];
            const labelsToAdd = ['status: completed'];
            
            // Remove old status labels
            for (const label of labelsToRemove) {
              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: itemNumber,
                  name: label
                });
              } catch (error) {
                // Label might not exist, continue
                console.log(`Label "${label}" not found on ${itemType} #${itemNumber}`);
              }
            }
            
            // Add completed status
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: itemNumber,
              labels: labelsToAdd
            });

  notify-completion:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' && github.event_name == 'issues'
    steps:
      - name: Thank Contributor
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            
            if (issue.state_reason === 'completed') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `ðŸŽ‰ Thank you for reporting this issue! This has been resolved and is now closed.

If you experience any related issues or have questions about the resolution, please feel free to open a new issue.

Thanks for helping improve the US Stock CSV Downloader! ðŸš€`
              });
            }